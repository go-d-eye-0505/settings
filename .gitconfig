[user]
	name = tanagoda
	email = tanagoda.tech@gmail.com
[color]
	diff = auto
	status = auto
	branch = auto
[push]
	default = simple
[core]
	precomposeunicode = true
	quotepath = false
	editor = vim -c \"set fenc=utf-8\"
[alias]
  ########################## git log ##############################

  # git log-dog
  log-dog = log --decorate --oneline --graph

  ########################## git branch ##############################

  # git branch-edit (branchの説明を編集)
  branch-edit = branch --edit-description

  # git branch-desc (branchの説明を追加)
  branch-desc = "!f () {\
    branch_name=`git rev-parse --abbrev-ref ${1:-@}`;\
    branch_description=`git config branch.${branch_name}.description`;\
    if [ -z ${branch_description} ]; then\
      echo \"Please edit branch_description. Use 'git branch-edit ${1}'\";\
    else\
      echo ${branch_description};\
    fi;\
  };f"

  # git bd (branch名の表示 & branchの説明も表示)
  bd = "!f () {\
    git for-each-ref --format='%(refname:short)' refs/heads | xargs -I@ sh -c '\
      git branch | grep @ \
      && echo -n \"    --- \"\
      && git branch-desc @\
    ;';\
  };f"

  # branchを更新順に並べて表示する
  br = for-each-ref --sort=committerdate refs/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

  ########################## alias list ##############################

  # aliasのlistを表示
  alias = !git config --get-regexp '^alias\\.' | sed 's/alias\\.\\([^ ]*\\) \\(.*\\)/\\1\\\t => \\2/' | sort
